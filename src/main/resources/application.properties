#spring.application.name=EmployeeManagment
## Server Configuration
#server.port=8080  # Port where the application will run
#
## Spring Data JPA Configuration (for MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/employeemanagment
spring.datasource.username=root
spring.datasource.password=proxy
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#
## Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true  # Show SQL queries in the console
#spring.jpa.properties.hibernate.format_sql=true  # Format the SQL for better readability
#
## Logging Configuration
#logging.level.org.springframework.web=DEBUG  # Logs HTTP requests at DEBUG level
#logging.level.com.company.employeemanagement=DEBUG  # Logs employee management application at DEBUG level
#
## Spring Security (if applicable)
## spring.security.user.name=admin
## spring.security.user.password=admin123
#
## Custom Application Properties (Optional)
#employee.management.default-salary=50000  # Default salary value for new employees
#employee.management.max-salary=200000  # Maximum allowed salary for employees
#
## Email Configuration (if you plan to send emails)
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=your-email@gmail.com
#spring.mail.password=your-email-password
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## External API configurations (if applicable)
## external.api.url=https://api.example.com
## external.api.key=your-api-key

